{"ast":null,"code":"var _jsxFileName = \"/Users/nurudeenolalemi/Desktop/Trello/src/component/DraggableCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { Box } from \"@chakra-ui/react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableCard = ({\n  card,\n  index\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: \"CARD\",\n    item: {\n      card,\n      index\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n  const handleDragStart = e => {\n    // Define the data being dragged (the card data)\n    e.dataTransfer.setData(\"card\", JSON.stringify(card));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: drag,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      task: card.task,\n      description: card.description,\n      label: card.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(DraggableCard, \"IjyI5uV8ET8oZCgEs++uqE2gplk=\", false, function () {\n  return [useDrag];\n});\n_c = DraggableCard;\nexport default DraggableCard;\nvar _c;\n$RefreshReg$(_c, \"DraggableCard\");","map":{"version":3,"names":["React","useDrag","Box","Card","jsxDEV","_jsxDEV","DraggableCard","card","index","_s","isDragging","drag","type","item","collect","monitor","handleDragStart","e","dataTransfer","setData","JSON","stringify","ref","children","task","description","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nurudeenolalemi/Desktop/Trello/src/component/DraggableCard.js"],"sourcesContent":["import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { Box } from \"@chakra-ui/react\";\nimport Card from \"./Card\";\n\nconst DraggableCard = ({ card, index }) => {\n  const [{isDragging}, drag] = useDrag({\n    type: \"CARD\",\n    item: { card, index },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  const handleDragStart = (e) => {\n    // Define the data being dragged (the card data)\n    e.dataTransfer.setData(\"card\", JSON.stringify(card));\n  };\n\n  return (\n    <Box\n    ref={drag}\n    >\n      {/* Render your Card component here with the provided card data */}\n      <Card\n        task={card.task}\n        description={card.description}\n        label={card.label}\n      />\n    </Box>\n  );\n};\n\nexport default DraggableCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAAC;IAACC;EAAU,CAAC,EAAEC,IAAI,CAAC,GAAGV,OAAO,CAAC;IACnCW,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MAAEN,IAAI;MAAEC;IAAM,CAAC;IACrBM,OAAO,EAAEC,OAAO,KAAK;MACnBL,UAAU,EAAE,CAAC,CAACK,OAAO,CAACL,UAAU,CAAC;IACnC,CAAC;EACH,CAAC,CAAC;EAEF,MAAMM,eAAe,GAAIC,CAAC,IAAK;IAC7B;IACAA,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI,CAAC,CAAC;EACtD,CAAC;EAED,oBACEF,OAAA,CAACH,GAAG;IACJoB,GAAG,EAAEX,IAAK;IAAAY,QAAA,eAGRlB,OAAA,CAACF,IAAI;MACHqB,IAAI,EAAEjB,IAAI,CAACiB,IAAK;MAChBC,WAAW,EAAElB,IAAI,CAACkB,WAAY;MAC9BC,KAAK,EAAEnB,IAAI,CAACmB;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1BIH,aAAa;EAAA,QACYL,OAAO;AAAA;AAAA8B,EAAA,GADhCzB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}