{"ast":null,"code":"var _jsxFileName = \"/Users/nurudeenolalemi/Desktop/Trello/src/component/Container.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport TaskSection from \"./TaskSection\"; // Import the TaskSection component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const handleDrop = (sectionKey, droppedCard) => {\n    // Remove the card from its previous section\n    const updatedCards = cards.filter(card => card !== droppedCard.card);\n\n    // Update the section of the dropped card\n    droppedCard.card.section = sectionKey;\n\n    // Add the card to the new section\n    updatedCards.push(droppedCard.card);\n\n    // Update the state with the new card arrangement\n    setCards(updatedCards);\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    children: [/*#__PURE__*/_jsxDEV(TaskSection, {\n      title: \"To Do\",\n      sectionKey: \"todo\",\n      cards: cards.filter(card => card.section === \"todo\"),\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskSection, {\n      title: \"In Progress\",\n      sectionKey: \"inprogress\",\n      cards: cards.filter(card => card.section === \"inprogress\"),\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskSection, {\n      title: \"Completed\",\n      sectionKey: \"completed\",\n      cards: cards.filter(card => card.section === \"completed\"),\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","Flex","TaskSection","jsxDEV","_jsxDEV","Container","_s","cards","setCards","handleDrop","sectionKey","droppedCard","updatedCards","filter","card","section","push","justifyContent","children","title","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nurudeenolalemi/Desktop/Trello/src/component/Container.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\nimport TaskSection from \"./TaskSection\"; // Import the TaskSection component\n\nconst Container = () => {\n  const [cards, setCards] = useState([]);\n  \n  const handleDrop = (sectionKey, droppedCard) => {\n    // Remove the card from its previous section\n    const updatedCards = cards.filter((card) => card !== droppedCard.card);\n  \n    // Update the section of the dropped card\n    droppedCard.card.section = sectionKey;\n  \n    // Add the card to the new section\n    updatedCards.push(droppedCard.card);\n  \n    // Update the state with the new card arrangement\n    setCards(updatedCards);\n  };\n  \n  \n\n  return (\n    <Flex justifyContent=\"space-between\">\n      {/* Render \"To Do\" section */}\n      <TaskSection\n        title=\"To Do\"\n        sectionKey=\"todo\"\n        cards={cards.filter((card) => card.section === \"todo\")}\n        onDrop={handleDrop}\n      />\n\n      {/* Render \"In Progress\" section */}\n      <TaskSection\n        title=\"In Progress\"\n        sectionKey=\"inprogress\"\n        cards={cards.filter((card) => card.section === \"inprogress\")}\n        onDrop={handleDrop}\n      />\n\n      {/* Render \"Completed\" section */}\n      <TaskSection\n        title=\"Completed\"\n        sectionKey=\"completed\"\n        cards={cards.filter((card) => card.section === \"completed\")}\n        onDrop={handleDrop}\n      />\n    </Flex>\n  );\n};\n\nexport default Container;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAGA,CAACC,UAAU,EAAEC,WAAW,KAAK;IAC9C;IACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,WAAW,CAACG,IAAI,CAAC;;IAEtE;IACAH,WAAW,CAACG,IAAI,CAACC,OAAO,GAAGL,UAAU;;IAErC;IACAE,YAAY,CAACI,IAAI,CAACL,WAAW,CAACG,IAAI,CAAC;;IAEnC;IACAN,QAAQ,CAACI,YAAY,CAAC;EACxB,CAAC;EAID,oBACER,OAAA,CAACH,IAAI;IAACgB,cAAc,EAAC,eAAe;IAAAC,QAAA,gBAElCd,OAAA,CAACF,WAAW;MACViB,KAAK,EAAC,OAAO;MACbT,UAAU,EAAC,MAAM;MACjBH,KAAK,EAAEA,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,MAAM,CAAE;MACvDK,MAAM,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAGFpB,OAAA,CAACF,WAAW;MACViB,KAAK,EAAC,aAAa;MACnBT,UAAU,EAAC,YAAY;MACvBH,KAAK,EAAEA,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,YAAY,CAAE;MAC7DK,MAAM,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAGFpB,OAAA,CAACF,WAAW;MACViB,KAAK,EAAC,WAAW;MACjBT,UAAU,EAAC,WAAW;MACtBH,KAAK,EAAEA,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,WAAW,CAAE;MAC5DK,MAAM,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAClB,EAAA,CA9CID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}